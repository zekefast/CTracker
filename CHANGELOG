CHANGELOG:

* Fix defect with absent JavaScript environment which present tests from
  running.
* Move Ruby version specification from Gemfile to standard .ruby-version file
  which is understood by several ruby version managers like RVM and rv-env and
  produce no warnings in standard configuration on RVM. Plus, it's used by RVM
  by default.
* Specify gemset name in .ruby-gemset file. This is simplify to separate scope
  of gems from other projects on developer's computers and on some production
  deployments as well.
* Used Ruby version MRI 1.9.3 is stale and it's officially recommended to
  switch to one of 2.x branches because of security and support. Also some
  feature and performance improvements (most singificant is GC) was made in
  latest versions of MRI interpreter was made.
  So, Ruby update simplify and improve development and production usage process.
* Many bug fixes and features was made to new version of Ruby on Rails 4.1.1.
  So, to avoid fixing stale and commonly know problems and not to implement features
  present in 4.1.1 branch application moved to latest version of Ruby on Rails
  (4.1.1).
 * Update files generated on creation of default Ruby on Rails application.
 * Use "strong parameters" instead of "attr_accessible".
 * Update "cucumber-rails" to fix warning in cucumber test runs.
 * Replace unsupported :consitions keys for ActiveRecord scopes to lambdas.
 * Fix test helper should_not_respond_to_actions method by changin expected
   exception from ActionController::RoutingError to
   ActionController::UrlGenerationError.
 * Disable turbolinks.
 * Fix DataUpdater, because of changed ActiveRecord API.
   find_and_create_by_code(attributes) call was replaced with
   create_with(attributes).find_and_create_by(code: attributes[:code]).
* TestUnit for Ruby is rarely used nowadays.
  There is a commonly known better replacement to it, like RSpec.
  Latest version of it 3.0.0 and along with new powerful feature it doesn't
  polute tested objects with test specific methods (when expect syntax is used).
  So, it's worth to upgrade tests framework to RSpec.
 * Migrate TestUnit tests to RSpec:
  * Migrate models tests.
  * Migrate controllers tests.
 * Replace customer test helper test_validates_presence_of with similar one 
   provided by "shoulda-matchers" gem.
 * Replace customer test helper should_not_respond_to_actions with
   shared examples with similar name.
 * Move fixtures from test/ directory to spec/.
 * Remove warnings in features/step_definitions/web_steps.rb caused by usage of
   should syntax.
* There is a much better replacement to static fixtures provided by Rails.
  Replace Rails's fixtures with "factory_girl_rails".
 * Create factory girl models for country and currency models.
 * Remove fixtures.
 * Replace usage of fixtures to factories in tests.
* Add user authentication with help of "devise" gem.
 * Add "devise" gem dependency.
 * Install devise
 * Generate user model
 * Configure devise modules and users table fields in migration.
 * Show appropriate links when user doesn't authenticated and authenticated.
 * Add tests for User model.
 * Add User model factory.
 * Fix country and currency controllers' tests.
 * Fix cucumber's tests.
 * Describe authentication feature (sing up/in/out).
* Usage of code columns as primary key for currency and country isn't a good idea.
  It's a best practice to select primary keys for tables independent from external
  world, because changing records primary keys cause a lot of problems on migrations.
  Aside of that Ruby on Rails and FactoryGirl worked better with integer primary keys.
  Taking into account all that factors I've refactored relationship 
  between countries and currencies using integer primary keys.
  I've changed some migration directly instead of generation new ones because
  project haven't been deployed anywhere and it's should be save to do.
 * Add "id" fields to countries and currencies tables and make it a primary key
   instead of "code" fields.
 * Fix Country and Currency models accordingly to changes in tables.
 * Fix DataUpdater to properly establish relation between Currency and Country records.
 * Make "name" and "code" fields not null on currencies table.
 * Make "name" and "code" fields not null on countries table.
 * Add unique index on "code" field in countries and currencies tables.
 * Make "currencies.country_id" FK not null as currency have to always have a
   country it belongs to.
 * Update db/schema.rb
 * Fix currency factory model after prevent nullifing of currencies.country_id field.
 * Fix broken tests.
* Change collecting/visiting functionality to make it authenticated user aware.
 * Introduce CollectionItem model to establish relation between currency and user.
 * Disable ability to edit countries' name and code, because list of countries
   is common for all users and populated on application initial deployment 
   from 3-rd party service and stay stable along the application work.
 * Remove CountriesController#create because it is not used. Also there is no
   add country page wich would submit form to #create action.
 * Track visitation/collection through record presence in collection_items table.
 * Add BaseFormObject class to move out common functions from concrete form objects.
 * Add CountryFormObject to replace country edit page and still be able to track
   country visitation.
 * Use Virtus for form object attributes.
 * Fix visited countries counter in ContriesController#index action to count
   items from current user list.
 * Fix collected currencies counter in CurrenciesController#index action to
   count items from current user list.
 * Use CountryFormObject in ContriesController's #edit and #update actions.
 * Remove .visited and .not_visited scopes of Country model which operated on
   common list of visited countries.
 * Remove .collected, .not_collected, collected? methods of Currency model
   which operated on common list of collected currencies.
 * Add #visited? and #collected? methods to User model instead of remove scopes
   and methods in Country and Currency models.
 * Add tests for User#visited and User#collected? methods.
 * Remove :create action from routes for CountriesController.
 * Remove "countries.visited" column as visitation and collection tracked through
   collection_items table per collector base.
 * Add Cucumber test to verify that countries marked as visited for one
   collector does not marked for another.
 * Replace hardcoded url in Given statement with appropriate path helper.
 * Fix broken RSpec tests.
 * Fix broken Cucumber tests.
 * Remove RSpec tests for #create action of ContriesController.
